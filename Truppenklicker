import java.awt.*;
import java.awt.event.*;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.*;
import java.util.Timer;
import java.util.TimerTask;
import java.util.*;
import java.math.*;
import java.text.*;
import javax.swing.JDialog;
import java.io.*;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;

public class truppenklicker extends JFrame implements ActionListener{
    int yourScale = 2;
    int ppsScale = 3;

    double clicksAm = 0;
    String clicksAm2 = String.valueOf(clicksAm);
    double soldaten = 0;
    double pps = 0;
    double offiziere = 0;
    double g36s = 0;
    double panzerd = 0;
    double p3cs = 0;
    double hamburgd = 0;
    String clicksAm3;
    String pps2;
    double Panzerwagend = 0;
    double Panzerfaustd = 0;
    double warpower = 0;
    double kriegsparteikraft;
    int randomInt = 0;
    double usapower = 450;
    double ruspower = 460;
    double polenpower = 210;
    double turkenpower = 290;
    double frankreichpower = 5;
    double nordkoreapower = 180;
    double kasernen = 0;

    JPanel outer;
    JPanel nested;
    JPanel nested2;
    JPanel nested3;

    JPanel personalo;
    JPanel waffeno;
    JPanel fahrzeugo;
    JPanel flugzeugo;
    JPanel marino;
    JPanel save;
    JPanel kriego;
    JPanel persongeb;

    JLabel clicks;
    JLabel soldatenlabel;
    JLabel Preise;
    JLabel offizierlabel;
    JLabel G36Clabel;
    JLabel panzerlabel;
    JLabel P3Clabel;
    JLabel hamburglabel;
    JLabel Panzerwagenlabel;
    JLabel Panzerfaustlabel;
    JLabel warpowerlabel;
    JLabel krieglabel;
    JLabel kasernenlabel;

    JButton clickerS;
    JButton Personal;
    JButton Waffen;
    JButton Fahrzeuge;
    JButton Flugzeuge;
    JButton Marine;
    JButton Buildings;
    JButton speichern;
    JButton laden;
    JButton speicherja;
    JButton speichernein;
    JButton Krieg;
    JButton angriff;
    JButton newrandom;
    JButton kasernenbutton;

    JButton soldatenB;
    JButton Offizier;
    JButton G36C;
    JButton Panzer;
    JButton P3C;
    JButton Hamburg;
    JButton Panzerwagen;
    JButton Panzerfaust;
    JButton Personalgeb;

    public truppenklicker()
    {
        super("Truppenklicker");
        this.setSize(1820, 980);
        this.setVisible(true);
        outer = new JPanel(new BorderLayout());
        nested = new JPanel();
        nested2 = new JPanel();
        nested3 = new JPanel();
        setLocationRelativeTo(null);

        timer();
        timer2();

        clicks = new JLabel();
        clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");

        soldatenlabel = new JLabel();
        soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");

        Preise = new JLabel();
        Preise.setText("Preisübersicht: Soldat [30$]   G36C [500$]   Panzerfaust [850$]   Offizier [1.000$]   Panzerwagen [25.000$]   Panzer [250.000$]   P-3C Orion [2.500.000$]   Fregatte Hamburg [3.000.000$]   Kaserne [10.000.000$]   ");

        warpowerlabel = new JLabel();
        warpowerlabel.setText("Kriegskraft: " + BigDecimal.valueOf(warpower).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN));

        G36Clabel = new JLabel();
        G36Clabel.setText("G36C: " + String.valueOf(g36s) + "  ");

        offizierlabel = new JLabel();
        offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");

        panzerlabel = new JLabel();
        panzerlabel.setText("Panzer: " + String.valueOf(panzerd) + "  ");

        P3Clabel = new JLabel();
        P3Clabel.setText("P-3C Orion: " + String.valueOf(p3cs) + "  ");

        hamburglabel = new JLabel();
        hamburglabel.setText("Fregatte H.: " + String.valueOf(hamburgd) + "  ");

        Panzerwagenlabel = new JLabel();
        Panzerwagenlabel.setText("Panzerwagen: " + String.valueOf(Panzerwagend) + "  ");

        Panzerfaustlabel = new JLabel();
        Panzerfaustlabel.setText("Panzerfäuste: " + String.valueOf(Panzerfaustd) + "  ");

        kasernenlabel = new JLabel();
        kasernenlabel.setText("Kasernen: " + String.valueOf(kasernen) + "  ");

        krieglabel = new JLabel();

        clickerS = new JButton("Klick!");
        clickerS.setPreferredSize(new Dimension(80, 30));
        Personal = new JButton("Personal");
        Personalgeb = new JButton("Personalgebäude");
        Waffen = new JButton("Waffen");
        Fahrzeuge = new JButton("Fahrzeuge");
        Flugzeuge = new JButton("Flugzeuge");
        Marine = new JButton("Marine");
        speichern = new JButton("Speichern");
        laden = new JButton("Laden");
        Krieg = new JButton("Krieg");

        soldatenB = new JButton("Soldat");
        soldatenB.setVisible(true);
        soldatenB.setPreferredSize(new Dimension(80, 30));

        Offizier = new JButton("Offizier");
        Offizier.setVisible(true);
        Offizier.setPreferredSize(new Dimension(80, 30));

        G36C = new JButton("G36C");
        G36C.setVisible(true);
        G36C.setPreferredSize(new Dimension(80, 30));

        Panzer = new JButton("Panzer");
        Panzer.setVisible(true);
        Panzer.setPreferredSize(new Dimension(80, 30));

        P3C = new JButton("P-3C Orion");
        P3C.setVisible(true);
        P3C.setPreferredSize(new Dimension(100, 30));

        Hamburg = new JButton("Fregatte Hamburg");
        Hamburg.setVisible(true);
        Hamburg.setPreferredSize(new Dimension(140, 30));

        Panzerwagen = new JButton("Panzerwagen");
        Panzerwagen.setVisible(true);
        Panzerwagen.setPreferredSize(new Dimension(140, 30));

        Panzerfaust = new JButton("Panzerfaust");
        Panzerfaust.setVisible(true);
        Panzerfaust.setPreferredSize(new Dimension(140, 30));

        speicherja = new JButton("Ja");
        speicherja.setVisible(true);
        speicherja.setPreferredSize(new Dimension(80, 30));

        speichernein = new JButton("Nein");
        speichernein.setVisible(true);
        speichernein.setPreferredSize(new Dimension(80, 30));

        angriff = new JButton("Angriff!");
        angriff.setVisible(true);
        angriff.setPreferredSize(new Dimension(80, 30));

        newrandom = new JButton("Neuer Gegner");
        newrandom.setVisible(true);
        newrandom.setPreferredSize(new Dimension(120, 30));

        kasernenbutton = new JButton("Kaserne");
        kasernenbutton.setVisible(true);
        kasernenbutton.setPreferredSize(new Dimension(120, 30));

        clickerS.addActionListener(this);
        Personal.addActionListener(this);
        soldatenB.addActionListener(this);
        Offizier.addActionListener(this);
        Waffen.addActionListener(this);
        G36C.addActionListener(this);
        Fahrzeuge.addActionListener(this);
        Panzer.addActionListener(this);
        Flugzeuge.addActionListener(this);
        P3C.addActionListener(this);
        Marine.addActionListener(this);
        Hamburg.addActionListener(this);
        speichern.addActionListener(this);
        laden.addActionListener(this);
        speicherja.addActionListener(this);
        speichernein.addActionListener(this);
        Panzerwagen.addActionListener(this);
        Panzerfaust.addActionListener(this);
        Krieg.addActionListener(this);
        angriff.addActionListener(this);
        newrandom.addActionListener(this);
        Personalgeb.addActionListener(this);
        kasernenbutton.addActionListener(this);
        this.add(outer);

        nested.add(clicks);
        nested.add(soldatenlabel);
        nested.add(offizierlabel);
        nested.add(G36Clabel);
        nested.add(panzerlabel);
        nested.add(P3Clabel);
        nested.add(hamburglabel);
        nested.add(Panzerwagenlabel);
        nested.add(Panzerfaustlabel);

        nested2.add(clickerS);
        nested2.add(Personal);
        nested2.add(Waffen);
        nested2.add(Fahrzeuge);
        nested2.add(Flugzeuge);
        nested2.add(Marine);
        nested2.add(speichern);
        nested2.add(laden);
        nested2.add(Krieg);
        nested2.add(warpowerlabel);

        nested3.add(Preise);

        outer.add(nested, BorderLayout.PAGE_START);
        outer.add(nested2, BorderLayout.CENTER);
        outer.add(nested3, BorderLayout.PAGE_END);

    }

    public static void main(String[] args) {
        truppenklicker tl = new truppenklicker();
        tl.setVisible(true);
    }

    public void actionPerformed (ActionEvent ae){
        if(ae.getSource() == this.clickerS){
            clicksAm++;
            clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
        }
        JFrame A = new JFrame();

        if(ae.getSource() == this.Personal){

            JFrame D = new JFrame();
            D.setTitle("Personal kaufen");
            D.setSize(800,600);
            personalo = new JPanel();
            D.add(personalo);
            personalo.add(soldatenB);
            personalo.add(Offizier);
            personalo.add(Personalgeb);
            personalo.setVisible(true);
            D.setVisible(true);

        }
        if(ae.getSource() == this.Personalgeb){

            JFrame T = new JFrame();
            T.setTitle("Personal kaufen");
            T.setSize(800,600);
            persongeb = new JPanel();
            T.add(persongeb);
            persongeb.add(kasernenbutton);
            persongeb.add(kasernenlabel);
            persongeb.setVisible(true);
            T.setVisible(true);

        }
        if (ae.getSource() == this.soldatenB) {
            if(clicksAm >= 30) {
                clicksAm = clicksAm - 30;
                soldaten = soldaten + 1;
                soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                pps = pps + 0.025;
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }
        if (ae.getSource() == this.kasernenbutton) {
            if(clicksAm >= 10000000) {
                clicksAm = clicksAm - 10000000;
                kasernen = kasernen + 1;
                kasernenlabel.setText("Kasernen: " + String.valueOf(kasernen) + "  ");
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }

        if (ae.getSource() == this.Offizier) {
            if (clicksAm >= 1000) {
                clicksAm = clicksAm - 1000;
                offiziere = offiziere + 1;
                offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                pps = pps + 0.1;
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }

        if(ae.getSource() == this.Waffen){

            JFrame C = new JFrame();
            C.setTitle("Waffen kaufen");
            C.setSize(800,600);
            waffeno = new JPanel();
            C.add(waffeno);
            waffeno.add(G36C);
            waffeno.add(Panzerfaust);
            waffeno.setVisible(true);
            C.setVisible(true);

        }

        if (ae.getSource() == this.G36C) {
            if (clicksAm >= 500) {
                clicksAm = clicksAm - 500;
                g36s = g36s + 1;
                G36Clabel.setText("G36C: " + String.valueOf(g36s) + "  ");
                pps = pps + 0.08;
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }

        if (ae.getSource() == this.Panzerfaust) {
            if (clicksAm >= 850) {
                clicksAm = clicksAm - 850;
                Panzerfaustd = Panzerfaustd + 1;
                Panzerfaustlabel.setText("Panzerfäuste: " + String.valueOf(Panzerfaustd) + "  ");
                pps = pps + 0.095;
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }

        if(ae.getSource() == this.Fahrzeuge){

            JFrame B = new JFrame();
            B.setTitle("Fahrzeuge kaufen");
            B.setSize(800,600);
            fahrzeugo = new JPanel();
            B.add(fahrzeugo);
            fahrzeugo.add(Panzer);
            fahrzeugo.add(Panzerwagen);
            fahrzeugo.setVisible(true);
            B.setVisible(true);

        }

        if (ae.getSource() == this.Panzer) {
            if (clicksAm >= 250000) {
                clicksAm = clicksAm - 250000;
                panzerd = panzerd + 1;
                panzerlabel.setText("Panzer: " + String.valueOf(panzerd) + "  ");
                pps = pps + 0.165;
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }

        if (ae.getSource() == this.Panzerwagen) {
            if (clicksAm >= 25000) {
                clicksAm = clicksAm - 25000;
                Panzerwagend = Panzerwagend + 1;
                Panzerwagenlabel.setText("Panzerwagen: " + String.valueOf(Panzerwagend) + "  ");
                pps = pps + 1.35;
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }

        if(ae.getSource() == this.Flugzeuge){

            A.setTitle("Flugzeuge kaufen");
            A.setSize(800,600);
            flugzeugo = new JPanel();
            A.add(flugzeugo);
            flugzeugo.add(P3C);
            flugzeugo.setVisible(true);
            A.setVisible(true);

        }

        if (ae.getSource() == this.P3C) {
            if (clicksAm >= 2500000) {
                clicksAm = clicksAm - 2500000;
                p3cs = p3cs + 1;
                P3Clabel.setText("P-3C Orion: " + String.valueOf(p3cs) + "  ");
                pps = pps + 1.795;
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }

        if(ae.getSource() == this.Marine){

            A.setTitle("Marineobjekte Kaufen");
            A.setSize(800,600);
            marino = new JPanel();
            A.add(marino);
            marino.add(Hamburg);
            marino.setVisible(true);
            A.setVisible(true);

        }

        if (ae.getSource() == this.Hamburg) {
            if (clicksAm >= 3000000) {
                clicksAm = clicksAm - 3000000;
                hamburgd = hamburgd + 1;
                hamburglabel.setText("Fregatte H.: " + String.valueOf(hamburgd) + "  ");
                pps = pps + 1.895;
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
            } else {

                JDialog error = new JDialog();
                error.setTitle("Error");
                error.setSize(180, 80);
                error.setModal(true);
                error.add(new JLabel("Nicht genügend Guthaben!"));
                error.setVisible(true);

            }
        }

        if(ae.getSource() == this.Krieg) {
            JFrame Z = new JFrame();
            Z.setTitle("In den Krieg ziehen");
            Z.setSize(800,600);
            kriego = new JPanel();
            Z.add(kriego);
            Random randomGenerator = new Random();
            for (int idx = 0; idx<10; idx++) {
                randomInt = 1 + randomGenerator.nextInt(6);
            }
            if (randomInt == 1) {
                krieglabel.setText("Ihr gegner: USA. Kriegskraft: " + usapower);
                kriego.add(angriff);
            } else if (randomInt == 2) {
                krieglabel.setText("Ihr gegner: Russland. Kriegskraft: " + ruspower);
                kriego.add(angriff);
            } else if (randomInt == 3) {
                krieglabel.setText("Ihr gegner: Polen. Kriegskraft: " + polenpower);
                kriego.add(angriff);
            }else if (randomInt == 4) {
                krieglabel.setText("Ihr gegner: Frankreich. Kriegskraft: " + frankreichpower);
                kriego.add(angriff);
            }else if (randomInt == 5) {
                krieglabel.setText("Ihr gegner: Türkei. Kriegskraft: " + turkenpower);
                kriego.add(angriff);
            }else if (randomInt == 6) {
                krieglabel.setText("Ihr gegner: Nordkorea. Kriegskraft: " + nordkoreapower);
                kriego.add(angriff);
            }
            kriego.add(krieglabel);
            kriego.add(newrandom);
            kriego.setVisible(true);
            Z.setVisible(true);
        }

        if(ae.getSource() == this.newrandom) {
            Random randomGenerator = new Random();
            for (int idx = 0; idx<10; idx++) {
                randomInt = 1 + randomGenerator.nextInt(6);
            }
            if (randomInt == 1) {
                krieglabel.setText("Ihr gegner: USA. Kriegskraft: " + usapower);
                kriego.add(angriff);
            } else if (randomInt == 2) {
                krieglabel.setText("Ihr gegner: Russland. Kriegskraft: " + ruspower);
                kriego.add(angriff);
            } else if (randomInt == 3) {
                krieglabel.setText("Ihr gegner: Polen. Kriegskraft: " + polenpower);
                kriego.add(angriff);
            }else if (randomInt == 4) {
                krieglabel.setText("Ihr gegner: Frankreich. Kriegskraft: " + frankreichpower);
                kriego.add(angriff);
            }else if (randomInt == 5) {
                krieglabel.setText("Ihr gegner: Türkei. Kriegskraft: " + turkenpower);
                kriego.add(angriff);
            }else if (randomInt == 6) {
                krieglabel.setText("Ihr gegner: Nordkorea. Kriegskraft: " + nordkoreapower);
                kriego.add(angriff);
            }
            kriego.add(krieglabel);
            kriego.add(newrandom);
            kriego.setVisible(true);
        }

        if(ae.getSource() == this.angriff) {

            if(randomInt == 1){
                if (usapower > warpower){
                    JDialog niederlage = new JDialog();
                    niederlage.setTitle("Niederlage!");
                    niederlage.setSize(500, 150);
                    niederlage.setModal(true);
                    niederlage.add(new JLabel("Der Krieg gegen die USA wurde verloren. Dir werden alle Soldaten abgezogen."));
                    pps = pps - (soldaten * 0.025);
                    soldaten = 0;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    niederlage.setVisible(true);
                } else if(usapower < warpower) {
                    JDialog sieg = new JDialog();
                    sieg.setTitle("Sieg!");
                    sieg.setSize(180, 80);
                    sieg.setModal(true);
                    sieg.add(new JLabel("Der Krieg gegen die USA wurde gewonnen!"));
                    sieg.add(new JLabel("Dir werden als Kriegsvergütung 100 Soldaten, 10 Offiziere und $2500000 gutgeschrieben."));
                    pps = pps + 3.5;
                    soldaten = soldaten + 100;
                    offiziere = offiziere + 10;
                    clicksAm = clicksAm + 2500000;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                    sieg.setVisible(true);
                }
            }
            if(randomInt == 2){
                if (ruspower > warpower){
                    JDialog niederlage = new JDialog();
                    niederlage.setTitle("Niederlage!");
                    niederlage.setSize(500, 150);
                    niederlage.setModal(true);
                    niederlage.add(new JLabel("Der Krieg gegen die Russen wurde verloren. Dir werden alle Soldaten abgezogen."));
                    pps = pps - (soldaten * 0.025);
                    soldaten = 0;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    niederlage.setVisible(true);
                } else if(ruspower < warpower) {
                    JDialog sieg = new JDialog();
                    sieg.setTitle("Sieg!");
                    sieg.setSize(180, 80);
                    sieg.setModal(true);
                    sieg.add(new JLabel("Der Krieg gegen die Russen wurde gewonnen!"));
                    sieg.add(new JLabel("Dir werden als Kriegsvergütung 115 Soldaten, 12 Offiziere und $3000000 gutgeschrieben."));
                    pps = pps + 4.075;
                    soldaten = soldaten + 115;
                    offiziere = offiziere + 12;
                    clicksAm = clicksAm + 3000000;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                    sieg.setVisible(true);
                }
            }
            if(randomInt == 3){
                if (polenpower > warpower){
                    JDialog niederlage = new JDialog();
                    niederlage.setTitle("Niederlage!");
                    niederlage.setSize(500, 150);
                    niederlage.setModal(true);
                    niederlage.add(new JLabel("Der Krieg gegen die Polen wurde verloren. Dir werden alle Soldaten abgezogen."));
                    pps = pps - (soldaten * 0.025);
                    soldaten = 0;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    niederlage.setVisible(true);
                } else if(polenpower < warpower) {
                    JDialog sieg = new JDialog();
                    sieg.setTitle("Sieg!");
                    sieg.setSize(180, 80);
                    sieg.setModal(true);
                    sieg.add(new JLabel("Der Krieg gegen die Polen wurde gewonnen!"));
                    sieg.add(new JLabel("Dir werden als Kriegsvergütung 75 Soldaten, 6 Offiziere und $1500000 gutgeschrieben."));
                    pps = pps + 2.475;
                    soldaten = soldaten + 75;
                    offiziere = offiziere + 6;
                    clicksAm = clicksAm + 1500000;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                    sieg.setVisible(true);
                }
            }
            if(randomInt == 4){
                if (frankreichpower > warpower){
                    JDialog niederlage = new JDialog();
                    niederlage.setTitle("Niederlage!");
                    niederlage.setSize(500, 150);
                    niederlage.setModal(true);
                    niederlage.add(new JLabel("Der Krieg gegen die Franzosen wurde verloren. Dir werden alle Soldaten abgezogen."));
                    pps = pps - (soldaten * 0.025);
                    soldaten = 0;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    niederlage.setVisible(true);
                } else if(frankreichpower < warpower) {
                    JDialog sieg = new JDialog();
                    sieg.setTitle("Sieg!");
                    sieg.setSize(180, 80);
                    sieg.setModal(true);
                    sieg.add(new JLabel("Der Krieg gegen die Franzosen wurde gewonnen!"));
                    sieg.add(new JLabel("Dir werden als Kriegsvergütung 5 Soldaten, 1 Offiziere und $250000 gutgeschrieben."));
                    pps = pps + 0.225;
                    soldaten = soldaten + 5;
                    offiziere = offiziere + 1;
                    clicksAm = clicksAm + 250000;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                    sieg.setVisible(true);
                }
            }
            if(randomInt == 5){
                if (turkenpower > warpower){
                    JDialog niederlage = new JDialog();
                    niederlage.setTitle("Niederlage!");
                    niederlage.setSize(500, 150);
                    niederlage.setModal(true);
                    niederlage.add(new JLabel("Der Krieg gegen die Türken wurde verloren. Dir werden alle Soldaten abgezogen."));
                    pps = pps - (soldaten * 0.025);
                    soldaten = 0;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    niederlage.setVisible(true);
                } else if(turkenpower < warpower) {
                    JDialog sieg = new JDialog();
                    sieg.setTitle("Sieg!");
                    sieg.setSize(180, 80);
                    sieg.setModal(true);
                    sieg.add(new JLabel("Der Krieg gegen die Türken wurde gewonnen!"));
                    sieg.add(new JLabel("Dir werden als Kriegsvergütung 90 Soldaten, 6 Offiziere und $2000000 gutgeschrieben."));
                    pps = pps + 2.85;
                    soldaten = soldaten + 90;
                    offiziere = offiziere + 6;
                    clicksAm = clicksAm + 2000000;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                    sieg.setVisible(true);
                }
            }
            if(randomInt == 6){
                if (nordkoreapower > warpower){
                    JDialog niederlage = new JDialog();
                    niederlage.setTitle("Niederlage!");
                    niederlage.setSize(500, 150);
                    niederlage.setModal(true);
                    niederlage.add(new JLabel("Der Krieg gegen die Nordkorea wurde verloren. Dir werden alle Soldaten abgezogen."));
                    pps = pps - (soldaten * 0.025);
                    soldaten = 0;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    niederlage.setVisible(true);
                } else if(nordkoreapower < warpower) {
                    JDialog sieg = new JDialog();
                    sieg.setTitle("Sieg!");
                    sieg.setSize(180, 80);
                    sieg.setModal(true);
                    sieg.add(new JLabel("Der Krieg gegen die Nordkorea wurde gewonnen!"));
                    sieg.add(new JLabel("Dir werden als Kriegsvergütung 80 Soldaten, 5 Offiziere und $1800000 gutgeschrieben."));
                    pps = pps + 2.5;
                    soldaten = soldaten + 80;
                    offiziere = offiziere + 5;
                    clicksAm = clicksAm + 1800000;
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                    sieg.setVisible(true);
                }
            }
        }

        if (ae.getSource() == this.speichern) {
            A.setTitle("Speichern");
            A.setSize(600,300);
            save = new JPanel();
            A.add(save);
            save.add(new JLabel("Wirklich speichern?"));    
            save.add(speicherja);
            save.add(speichernein);
            save.setVisible(true);
            A.setVisible(true);
        }
        if (ae.getSource() == this.speichernein) {
            A.setVisible(false);
            A.dispose();
        }
        if (ae.getSource() == this.speicherja) {
            try {
                File newTextFile = new File("savegame.txt");

                BufferedWriter fw = new BufferedWriter(new FileWriter(newTextFile));
                fw.write(String.valueOf(clicksAm));
                fw.newLine();
                fw.write(String.valueOf(pps));
                fw.newLine();
                fw.write(String.valueOf(soldaten));
                fw.newLine();
                fw.write(String.valueOf(g36s));
                fw.newLine();
                fw.write(String.valueOf(offiziere));
                fw.newLine();
                fw.write(String.valueOf(panzerd));
                fw.newLine();
                fw.write(String.valueOf(p3cs));
                fw.newLine();
                fw.write(String.valueOf(hamburgd));
                fw.newLine();
                fw.write(String.valueOf(Panzerwagend));
                fw.newLine();
                fw.write(String.valueOf(Panzerfaustd));
                fw.newLine();
                fw.write(String.valueOf(kasernen));
                fw.newLine();
                fw.flush();
                fw.close();
                A.setVisible(false);
                A.dispose(); 

            } catch (IOException iox) {
                iox.printStackTrace();
            }
        }

        if (ae.getSource() == this.laden) {
            ladeDatei();
        }

    }

    public double timer(){
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
                @Override
                public void run() {

                    clicksAm = clicksAm + pps;
                    clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
                    warpower = (soldaten / 10) + (g36s / 15) + (offiziere / 9) + (panzerd / 3) + (p3cs / 3) + (hamburgd / 1.5) + (Panzerwagend / 5) + (Panzerfaustd / 8);
                    warpowerlabel.setText("Kriegskraft: " + BigDecimal.valueOf(warpower).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN));

                }
            }, 1000, 1000);

        return 0;

    }

    public double timer2(){

        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
                @Override
                public void run() {
                    soldaten = soldaten + kasernen;
                    pps = pps + (kasernen * 0.025);
                    soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                    G36Clabel.setText("G36C: " + String.valueOf(g36s) + "  ");
                    offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                    panzerlabel.setText("Panzer: " + String.valueOf(panzerd) + "  ");
                    P3Clabel.setText("P-3C Orion: " + String.valueOf(p3cs) + "  ");
                    hamburglabel.setText("Fregatte H.: " + String.valueOf(hamburgd) + "  ");
                    Panzerwagenlabel.setText("Panzerwagen: " + String.valueOf(Panzerwagend) + "  ");
                    Panzerfaustlabel.setText("Panzerfäuste: " + String.valueOf(Panzerfaustd) + "  ");
                    kasernenlabel.setText("Kasernen: " + String.valueOf(kasernen) + "  ");

                }
            }, 10000, 10000);

        return 0;

    }

    public void ladeDatei(){ 

        FileInputStream fis = null;
        BufferedReader reader = null;

        try {
            fis = new FileInputStream("savegame.txt");
            reader = new BufferedReader(new InputStreamReader(fis));

            String line = reader.readLine();
            while(line != null){
                clicksAm = Double.parseDouble(line);
                line = reader.readLine();
                pps = Double.parseDouble(line);
                line = reader.readLine();
                soldaten = Double.parseDouble(line);
                line = reader.readLine();
                g36s = Double.parseDouble(line);
                line = reader.readLine();
                offiziere = Double.parseDouble(line);
                line = reader.readLine();
                panzerd = Double.parseDouble(line);
                line = reader.readLine();
                p3cs = Double.parseDouble(line);
                line = reader.readLine();
                hamburgd = Double.parseDouble(line);
                line = reader.readLine();
                Panzerwagend = Double.parseDouble(line);
                line = reader.readLine();
                Panzerfaustd = Double.parseDouble(line);
                line = reader.readLine();
                kasernen = Double.parseDouble(line);
                clicks.setText("$: " + BigDecimal.valueOf(clicksAm).setScale(yourScale, BigDecimal.ROUND_HALF_DOWN) + "  " + "[$ pro Sekunde: " + BigDecimal.valueOf(pps).setScale(ppsScale, BigDecimal.ROUND_HALF_DOWN) + "]  ");
                soldatenlabel.setText("Soldaten: " + String.valueOf(soldaten) + "  ");
                G36Clabel.setText("G36C: " + String.valueOf(g36s) + "  ");
                offizierlabel.setText("Offiziere: " + String.valueOf(offiziere) + "  ");
                panzerlabel.setText("Panzer: " + String.valueOf(panzerd) + "  ");
                P3Clabel.setText("P-3C Orion: " + String.valueOf(p3cs) + "  ");
                hamburglabel.setText("Fregatte H.: " + String.valueOf(hamburgd) + "  ");
                Panzerwagenlabel.setText("Panzerwagen: " + String.valueOf(Panzerwagend) + "  ");
                Panzerfaustlabel.setText("Panzerfäuste: " + String.valueOf(Panzerfaustd) + "  ");
                kasernenlabel.setText("Kasernen: " + String.valueOf(kasernen) + "  ");
                break;
            }  

        } catch (FileNotFoundException ex) {
            Logger.getLogger(truppenklicker.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(truppenklicker.class.getName()).log(Level.SEVERE, null, ex);

        } finally {
            try {
                reader.close();
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(truppenklicker.class.getName()).log(Level.SEVERE, null, ex);
            }

        } 
    }
}
